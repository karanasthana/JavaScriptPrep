{"version":3,"sources":["staticData sync /^/.//.*/.json$","components/HomePage/SectionComponent.js","components/HomePage/HomePage.js","components/DetailPage/ImportantLinksComponent.js","components/DetailPage/QuestionAnswerComponent.js","components/DetailPage/HeaderComponent.js","components/DetailPage/DetailPage.js","App.js","serviceWorker.js","index.js","assets/images/coding.jpg","assets/images/mobile-dev.jpg","assets/images/computer-table.jpg","assets/images/computer.jpg","assets/images/common.webp"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SectionComponent","props","className","style","backgroundImage","image","text","toUpperCase","to","pathname","json","HomePage","JavascriptImage","javascriptJSON","ReactNativeImage","reactNativeJSON","ReactImage","reactJSON","ReduxImage","reduxJSON","ImportantLinksComponent","linksList","console","log","LinksUI","_","link","index","key","target","rel","href","Col","md","span","offset","QuestionAnswerComponent","questionsAndAnswersArray","questionsAndAnswers","length","element","Accordion","Card","Toggle","as","Header","eventKey","ReactHtmlParser","question","Collapse","Body","answer","HeaderComponent","BG","src","logo","alt","topic","Topic","require","match","params","substr","Button","onClick","allCardHeaders","document","getElementsByClassName","each","$el","click","innerHTML","importantLinks","App","path","name","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.417ad716.chunk.js","sourcesContent":["var map = {\n\t\"./javascript.json\": 23,\n\t\"./react-js.json\": 25,\n\t\"./react-native.json\": 24,\n\t\"./redux.json\": 26\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 112;","import React from 'react';\nimport './../../css/SectionComponent.css';\nimport { Link } from 'react-router-dom';\n\nexport default function SectionComponent(props) {\n    return (\n        <div className=\"section-container\" style={{ backgroundImage: `url(${props.image})` }}>\n            <h2>\n                {`${props.text.toUpperCase()}`}\n            </h2>\n            <Link className=\"button-container\" to={{ pathname: `/topic/:${props.id}`, id: `${props.id}`, json: `${props.json}` }} id={props.id}>\n                <div className=\"button\">\n                    Learn {props.text}\n                </div>\n            </Link>\n        </div>\n    )\n}","import React from 'react';\nimport SectionComponent from './SectionComponent';\nimport ReduxImage from '../../assets/images/coding.jpg';\nimport ReactNativeImage from '../../assets/images/mobile-dev.jpg';\nimport ReactImage from '../../assets/images/computer-table.jpg';\nimport JavascriptImage from '../../assets/images/computer.jpg';\nimport javascriptJSON from '../../staticData/javascript.json';\nimport reactNativeJSON from '../../staticData/react-native.json';\nimport reactJSON from '../../staticData/react-js.json';\nimport reduxJSON from '../../staticData/redux.json';\n\n\nexport default function HomePage() {\n    return (\n        <div>\n            <SectionComponent image={JavascriptImage} text={'Javascript'} id={'javascript'} json={javascriptJSON} />\n            <SectionComponent image={ReactNativeImage} text={'React Native'} id={'react-native'} json={reactNativeJSON} />\n            <SectionComponent image={ReactImage} text={'React JS'} id={'react-js'} json={reactJSON} />\n            <SectionComponent image={ReduxImage} text={'Redux'} id={'redux'} json={reduxJSON} />\n        </div>\n    )\n}","import React from 'react';\nimport * as _ from 'lodash';\nimport {Col} from 'react-bootstrap'\nimport '../../css/detail.css'\n\nexport default function ImportantLinksComponent(props) {\n\n    let linksList = props.linksList;\n    console.log(linksList)\n    let LinksUI = _.map(linksList, function(link, index) {\n        return (\n            <li key={index}><a target=\"_blank\" rel='noopener noreferrer' href={link.link}>{link.text}</a></li>\n        );\n    })\n\n    return (\n        linksList[0].link!== '' ?\n        <div>\n            <h1 className=\"topic\">Important Links</h1>\n            <ul className=\"links-container\">\n                <Col md={{ span: 10, offset: 1 }}>\n                    { LinksUI }\n                </Col>\n                \n            </ul>\n        </div> : '' \n    );\n}","import React from 'react';\nimport {Accordion, Card, Col} from 'react-bootstrap';\nimport ReactHtmlParser from 'react-html-parser';\nimport '../../css/detail.css';\n\nexport default function QuestionAnswerComponent(props) {\n    const questionsAndAnswersArray = props.questionsAndAnswers;\n    return questionsAndAnswersArray.length > 0 ? questionsAndAnswersArray.map((element, index) => {\n        return (\n            <div key={index}>\n                <Col md={{ span: 10, offset: 1 }}>\n                    <Accordion >\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} className=\"toggle-card\" eventKey={index}>\n                                { ReactHtmlParser(element.question) }\n                            </Accordion.Toggle>\n                            <Accordion.Collapse eventKey={index}>\n                                <Card.Body>{ ReactHtmlParser(element.answer) }</Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </Col>\n            </div>\n        )\n    }) : null\n}","import React from 'react';\nimport BG from '../../assets/images/common.webp';\nexport default function HeaderComponent(props) {\n    return(\n        <div className=\"qa-container\" style={{ backgroundImage: `url(${BG})`}}>\n            <img src={props.logo} alt=\"Topic Logo\" className=\"logo\" />\n            <h1 className=\"topic\">{props.topic}</h1>\n        </div>\n    )\n}","import React from 'react';\nimport ImportantLinksComponent from './ImportantLinksComponent';\nimport QuestionAnswerComponent from './QuestionAnswerComponent';\nimport HeaderComponent from './HeaderComponent';\nimport '../../css/detail.css';\nimport { Button } from 'react-bootstrap';\nimport _ from 'lodash';\n\nexport default function Topic(props) {\n    let json = require(`../../staticData/${props.match.params.id.substr(1)}.json`)\n    let expandAll = (e) => {\n        let allCardHeaders = document.getElementsByClassName('toggle-card');\n        _.each(allCardHeaders, ($el) => {\n            $el.click();\n        });\n        \n        e.target.innerHTML = e.target.innerHTML === 'Expand All' ? 'Collapse All' : 'Expand All';\n    };\n\n    return (\n        <div className=\"detail-container\">\n            <Button onClick={expandAll} className={'expand-collapse-all'} id={'ExpColBtn'}>\n                Expand All\n            </Button>\n            <HeaderComponent logo={json.logo} topic={json.topic} />\n            <QuestionAnswerComponent questionsAndAnswers={json.questionsAndAnswers} />\n            <ImportantLinksComponent linksList={json.importantLinks} />\n        </div>\n    );\n}","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport HomePage from './components/HomePage/HomePage'\nimport Topic from './components/DetailPage/DetailPage'\n\nfunction App(){\n  return(\n    <Router>\n      <Switch>\n        <Route path={\"/topic/:id\"} name=\"Topic\" component={Topic}/>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/coding.ac092b15.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mobile-dev.ad3dfdd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer-table.4fdf6d5b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/computer.a277703e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/common.122b5b53.webp\";"],"sourceRoot":""}